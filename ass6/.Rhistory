z <- c(3,4,5)
x <- sum((z-mean(z))^2)
random.normal.100.rep <- replicate(n=4, rnorm(100, 5, 2))
apply(random.normal.100.rep, 2, sd)
apply(random.normal.100.rep, 20, sd)
apply(random.normal.100.rep, 24, sd)
apply(random.normal.100.rep, 4, sd)
apply(random.normal.100.rep, 1, sd)
apply(random.normal.100.rep, 2, sd)
source("/home/akhil/Documents/probStats/ass6/bayesian_confidence.R")
Bayesian_Confidence_Interval(rbern(1000, 0.3), "Bernoulli", c(0.5, 0.5))
Bayesian_Confidence_Interval(rbinom(1000, 1, 0.3), "Bernoulli", c(0.5, 0.5))
source("/home/akhil/Documents/probStats/ass6/bayesian_confidence.R")
Bayesian_Confidence_Interval(rbinom(1000, 1, 0.3), "Bernoulli", c(0.5, 0.5))
Bayesian_Confidence_Interval(rexp(1000, 2), "Exponential", c(0.5, 0.5))
Bayesian_Confidence_Interval(rexp(100, 1), "Exponential", c(0.5, 0.5))
Bayesian_Confidence_Interval(rpois(100, 1), "Poisson", c(0.5, 0.5))
source("/home/akhil/Documents/probStats/ass4/gof.R")
source("/home/akhil/Documents/probStats/midterm/mystery.pck")
source("/home/akhil/Documents/probStats/midterm/midterm.R")
general.gof.solver(v1, "Binomial", 10)
general.gof.solver(v1, "Geometric", 10)
general.gof.solver(v1, "Poisson", 10)
general.gof.solver(v1, "Uniform", 10)
general.gof.solver(v1, "Normal", 10)
general.gof.solver(v1, "Exponential", 10)
general.gof.solver(v1, "Gamma", 10)
general.gof.solver(v1, "Beta", 10)
Bootstrap_gold(v1, statfunc)
Bootstrap_gold(v1, statfunc)
source("/home/akhil/Documents/probStats/ass1/jackknife.R")
Bootstrap_gold(v1, statfunc)
source("/home/akhil/Documents/probStats/midterm/midterm.R")
Bootstrap_gold(v1, statfunc)
Bootstrap_gold(v1, statfunc = statfunc)
source("/home/akhil/Documents/probStats/midterm/mystery.pck")
Bootstrap_gold(v1, statfunc = statfunc1)
Bootstrap_gold(v1, statfunc1)
statfunc1 <-
function(x){mean(x)-mean(x,trim=.2)}
Bootstrap_gold(v1, statfunc1)
source("/home/akhil/Documents/probStats/midterm/mystery.pck")
source("/home/akhil/Documents/probStats/midterm/midterm.R")
Bootstrap_gold(v1, statfunc)
Bootstrap_gold(v1, statfunc)
source("/home/akhil/Documents/probStats/midterm/midterm.R")
Bootstrap_gold(v1, statfunc)
Bootstrap_gold(v1, statfunc, 10000, 0.1)
source("/home/akhil/Documents/probStats/midterm/midterm.R")
Bootstrap_gold(v1, statfunc, 10000, 0.1)
source("/home/akhil/Documents/probStats/midterm/midterm.R")
Bootstrap_gold(v1, statfunc, 10000, 0.1)
Jackknife(v1, 10000, statfunc, 0.1)
Jackknife(v1, 10000, statfunc, 0.1)$jacksd
source("/home/akhil/Documents/probStats/ass1/jackknife.R")
Jackknife(v1, 10000, statfunc, 0.1)$jacksd
Jackknife(v1, 10000, statfunc, 0.1)
source("/home/akhil/Documents/probStats/ass1/jackknife.R")
source("/home/akhil/Documents/probStats/midterm/midterm.R")
Bootstrap_gold(v1, statfunc, 10000, 0.1)
source("/home/akhil/Documents/probStats/ass1/jackknife.R")
Jackknife(v1, 10000, statfunc, 0.1)
source("/home/akhil/Documents/probStats/midterm/midterm.R")
Bootstrap_gold(v1, statfunc, 10000, 0.1)
source("/home/akhil/Documents/probStats/midterm/midterm.R")
Bootstrap_gold(v1, statfunc, 10000, 0.1)
source("/home/akhil/Documents/probStats/ass1/jackknife.R")
Bootstrap_gold(v1, statfunc, 10000, 0.1)
source("/home/akhil/Documents/probStats/ass1/jackknife.R")
Bootstrap_gold(v1, statfunc, 10000, 0.1)
source("/home/akhil/Documents/probStats/midterm/midterm.R")
Bootstrap_gold(v1, statfunc, 10000, 0.1)
pvalues <- list(3,2,4,1)
order(pvalues, decreasing = FALSE)
sort(pvalues, decreasing = FALSE)
sort.list(pvalues, decreasing = FALSE)
sort.int(pvalues, decreasing = FALSE)
pvalues <- c(3,1,2)
sort.int(pvalues, decreasing = FALSE)
pvalues[2]
pvalues[1]
pvalues[1]
pvalues[2]
pvalues[3]
pvalues <- sort.int(pvalues, decreasing = FALSE)
pvalues[1]
pvalues[2]
pvalues[3]
library(package = ISLR, lib.loc = "~/Documents/prob")
library(package = ISLR, lib.loc = "~/Documents/probStats/finals/")
table(NCI60$labs)
table(NCI60$data)
data("NCI60")
NCI60
NCI60$labs[1]
NCI60$data[1]
NCI60$data[1][1]
NCI60$data[1][2]
NCI60$data[2]
NCI60$data[3]
table(NCI60$labs)
table(NCI60$data)
NCI60
NCI60$data[1][]
NCI60$data[6831]
table(NCI60$data)''
table(NCI60$data)
length(NCI60$data)
NCI60$data[1:10]
NCI60$data[1:6830]
NCI60$labs
source("~/Documents/probStats/finals/BH.R")
pvalues <- PValue_Generator(NCI60$data[34*6830+1:35*6830])
pvalues
var(NCI60$data[34*6830+1:35*6830])
NCI60$data[1+1:3]
NCI60$data[1+1:2]
NCI60$data[1+1:1]
var(NCI60$data[(34*6830+1):(35*6830)])
pvalues <- PValue_Generator(NCI60$data[(34*6830+1):(35*6830)])
pvalues
max(pvalues)
?max
pmax(pvalues)
pmax.int(pvalues)
pmax(pvalues)
dnorm(-3, 0, 9)
dnorm(-1, 0, 9)
dnorm(0, 0, 9)
dnorm(-20, 0, 9)
source("~/Documents/probStats/finals/BH.R")
pvalues <- PValue_Generator(NCI60$data[(34*6830+1):(35*6830)])
pvalues
FDR(pvalues, 0.05)
sort.int()
p <- c(1.2,3.1,2.4)
p <- unlist(pvalues)
FDR(p, 0.05)
source("~/Documents/probStats/finals/BH.R")
FDR(p, 0.05)
FDR(p, 0.2)
length(p)
source("~/Documents/probStats/finals/BH.R")
pvalues <- PValue_Generator(NCI60$data[(34*6830+1):(35*6830)])
p <- unlist(pvalues)
FDR(p, 0.2)
FDR(p, 0.05)
FDR(p, 0.005)
FDR(p, 0.0005)
FDR(p, 0.00005)
FDR(p, 0.000005)
source("~/Documents/probStats/finals/BH.R")
FDR(p, 0.00005)
pvalues <- sort.int(p, decreasing = FALSE)
pvalues
pvalues <- sort.int(p, decreasing = TRUE)
pvalues
FDR(p, 0.0000005)
FDR(p, 0.00000005)
FDR(p, 0.000000005)
FDR(p, 0.00000000005)
FDR(p, 0.00000000000005)
FDR(p, 0)
mean(p)
sqrt(var(p))/sqrt(length(p))
sum(p)
pvalues <- PValue_Generator(NCI60$data[(0*6830+1):(1*6830)])
p <- unlist(pvalues)
p <- unlist(pvalues)
p
NCI60$data[0:6830]
NCI60$data[0]
NCI60$data[1]
NCI60$data[0:1]
NCI60$data[1:19]
